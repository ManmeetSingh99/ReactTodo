{"version":3,"sources":["components/todoreact/Todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEdited","setIsEdited","toggleButton","setToggleButton","addItemsHandler","map","currele","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","Fragment","className","src","alt","type","placeholder","value","onChange","event","target","onClick","currElement","itemToBeEdited","find","currElem","editingItem","updatedItems","filter","currentEle","deletedItem","data-sm-link-text","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAgHeA,EAlGF,WAAO,IAAD,EACmBC,mBAAS,IAD5B,mBACRC,EADQ,KACGC,EADH,OAEWF,mBAbT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,gBAEnC,OAAGF,EACQG,KAAKC,MAAMJ,GAGX,GAMwBK,IAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAGkBV,mBAAS,IAH3B,mBAGRW,EAHQ,KAGGC,EAHH,OAIyBZ,oBAAS,GAJlC,mBAIRa,EAJQ,KAIMC,EAJN,KAOTC,EAAkB,WACpB,GAAId,EAGC,GAAGA,GAAaY,EACjBH,EAASD,EAAMO,KAAI,SAACC,GAChB,OAAGA,EAAQC,KAAOP,EACP,2BAAIM,GAAX,IAAoBE,KAAKlB,IAEtBgB,MAEXL,IACAV,EAAa,IACbY,GAAgB,OAGf,CACD,IAAMM,EAAiB,CACnBF,IAAG,IAAIG,MAAOC,UAAUC,WACxBJ,KAAKlB,GAETS,EAAS,GAAD,mBAAKD,GAAL,CAAaW,KACrBlB,EAAa,SApBbsB,MAAM,gBAiDd,OALAC,qBAAU,WACNrB,aAAasB,QAAQ,eAAgBpB,KAAKqB,UAAUlB,MACrD,CAACA,IAIA,cAAC,IAAMmB,SAAP,UACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,SACjC,gEAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOA,UAAU,eAAeG,KAAK,OAAOC,YAAY,yBAAgBC,MAAOjC,EAAWkC,SAAU,SAACC,GAAD,OAAUlC,EAAakC,EAAMC,OAAOH,UACvIrB,EAAgB,mBAAGgB,UAAU,sBAAsBS,QAASvB,IAC1D,mBAAGc,UAAU,qBAAqBS,QAASvB,IAHlD,OAQA,qBAAKc,UAAU,YAAf,SACKpB,EAAMO,KAAI,SAACuB,GACR,OACI,sBAA0BV,UAAU,WAApC,UACA,6BAAKU,EAAYpB,OACjB,sBAAKU,UAAU,WAAf,UACA,mBAAGA,UAAU,sBAAsBS,QAAS,kBA/CpD,SAACpB,GACjB,IAAMsB,EAAiB/B,EAAMgC,MAAK,SAACC,GAC/B,OAAOA,EAASxB,KAAOA,KAE3BN,EAAYM,GACZhB,EAAasC,EAAerB,MAC5BL,GAAgB,GAyCyD6B,CAAYJ,EAAYrB,KAAzE,eACA,mBAAGW,UAAU,2BAA2BS,QAAS,kBAvCzD,SAACpB,GACjB,IAAM0B,EAAenC,EAAMoC,QAAO,SAACC,GAC/B,OAAOA,EAAW5B,KAAOA,KAE7BR,EAASkC,GAmCqEG,CAAYR,EAAYrB,YAJpEqB,EAAYrB,SAYlC,qBAAKW,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAemB,oBAAkB,aAAaV,QAzC7D,WACnB5B,EAAS,KAwCO,SAAyF,0DCzFlGuC,EARH,WACV,OACE,cAAC,IAAMrB,SAAP,UACE,cAAC,EAAD,OCLNsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90682964.chunk.js","sourcesContent":["import React, { useState ,useEffect} from 'react';\r\nimport './style.css';\r\n\r\nconst getLocalData = () => {\r\n    const list =  localStorage.getItem(\"todoListData\");\r\n\r\n    if(list){\r\n        return JSON.parse(list);\r\n    }\r\n    else{\r\n        return([]);\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEdited , setIsEdited] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n\r\n    const addItemsHandler = ()=>{\r\n        if(!inputData){\r\n            alert(\"Enter Data!\")\r\n        }\r\n        else if(inputData && toggleButton){\r\n            setItems(items.map((currele) =>{\r\n                if(currele.id === isEdited){\r\n                    return {...currele, name:inputData}\r\n                }\r\n                return currele;\r\n            }));\r\n            setIsEdited();\r\n            setInputData(\"\");\r\n            setToggleButton(false);\r\n        }\r\n        \r\n        else {\r\n            const myNewInputData = {\r\n                id:new Date().getTime().toString(),\r\n                name:inputData\r\n            }\r\n            setItems([...items , myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    }\r\n\r\n    const editingItem = (id) => {\r\n        const itemToBeEdited = items.find((currElem)=>{\r\n            return currElem.id === id;\r\n        });\r\n        setIsEdited(id);\r\n        setInputData(itemToBeEdited.name);\r\n        setToggleButton(true);\r\n    }\r\n    \r\n    const deletedItem = (id) => {\r\n        const updatedItems = items.filter((currentEle)=>{\r\n            return currentEle.id !== id; \r\n        });\r\n        setItems(updatedItems);\r\n    }\r\n    \r\n    const removeAllItems = () => {\r\n        setItems([]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todoListData\", JSON.stringify(items))\r\n    }, [items]);\r\n\r\n   \r\n    return (\r\n        <React.Fragment>    \r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"todo\" />\r\n                        <figcaption>Add Your List Here </figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input className=\"form-control\" type=\"text\" placeholder=\"✍️ Add Items\"  value={inputData} onChange={(event)=> setInputData(event.target.value)}/>\r\n                        {toggleButton ? (<i className=\"far fa-edit add-btn\" onClick={addItemsHandler}></i>)\r\n                        : (<i className=\"fa fa-plus add-btn\" onClick={addItemsHandler}></i>) };\r\n                       \r\n                    </div>\r\n\r\n\r\n                    <div className=\"showItems\">\r\n                        {items.map((currElement)=>{\r\n                            return (\r\n                                <div key={currElement.id} className=\"eachItem\">\r\n                                <h3>{currElement.name}</h3>\r\n                                <div className=\"todo-btn\">\r\n                                <i className=\"far fa-edit add-btn\" onClick={()=> editingItem(currElement.id)}> </i>\r\n                                <i className=\"far fa-trash-alt add-btn\" onClick={()=> deletedItem(currElement.id)}></i>\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        })}\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAllItems}><span>CHECK LIST</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\n// import Restaurant from './components/basics/Restaurant';\n// import UseState from './components/Hooks/UseState';\n// import UseEffect from './components/Hooks/useEffect';\n// import UseReducer from './components/Hooks/UseReducer';\nimport Todo from './components/todoreact/Todo';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Todo></Todo>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}