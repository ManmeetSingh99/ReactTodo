{"version":3,"sources":["components/Weather/WeatherCard.js","components/Weather/Temp.js","App.js","index.js"],"names":["WeatherCard","props","useState","weatherState","setweatherState","weatherInfo","temp","pressure","humidity","weatherMood","country","sunset","speed","name","useEffect","sunsetTimeInMili","Date","sunsetTimeStr","getHours","getMinutes","Fragment","className","toLocaleDateString","Temp","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","console","log","main","weather","sys","wind","weatherCompleteInfo","type","placeholder","id","value","onChange","event","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49de6163.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nconst WeatherCard = (props) => {\r\n    const [weatherState, setweatherState] = useState();\r\n\r\n    const{\r\n        temp , \r\n        pressure, \r\n        humidity,\r\n        weatherMood,\r\n        country, \r\n        sunset,\r\n        speed,\r\n        name\r\n    } = props.weatherInfo;\r\n\r\n    useEffect(() => {\r\n        if(weatherMood){\r\n           switch (weatherMood) {\r\n               case \"Clouds\":\r\n                setweatherState(\"wi-day-cloudy\");\r\n                   break;\r\n           \r\n                case \"Clouds\":\r\n                    setweatherState(\"wi-day-cloudy\");\r\n                    break;\r\n\r\n                case \"Haze\":\r\n                    setweatherState(\"wi-fog\");\r\n                        break;\r\n                case \"Clear\":\r\n                    setweatherState(\"wi-day-sunny\");\r\n                        break;\r\n                case \"Rain\":\r\n                    setweatherState(\"wi-day-rain\");\r\n                        break;\r\n                case \"Mist\":\r\n                    setweatherState(\"wi-smog\");\r\n                        break;\r\n                case \"Snow\":\r\n                    setweatherState(\"wi-snow\");\r\n                        break;\r\n               default:\r\n                    setweatherState(\"wi-day-sunny\");\r\n                   break;\r\n           }\r\n        }\r\n    }, [weatherMood]);\r\n\r\n    let sec = sunset;\r\n    let sunsetTimeInMili = new Date(sec * 1000);\r\n    let sunsetTimeStr = `${(sunsetTimeInMili).getHours()}:${sunsetTimeInMili.getMinutes()}`;\r\n    return (\r\n       \r\n        <React.Fragment>\r\n             <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">\r\n                            {weatherMood}\r\n                        </div>\r\n                        <div className=\"place\">{name}, {country}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"date\">{new Date().toLocaleDateString()}</div>\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-sunset\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {sunsetTimeStr} PM <br/>\r\n                                Sunset \r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-humidity\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                               {humidity} <br/>\r\n                                Humidity \r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"weather-extra-info\">\r\n                            \r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-humidity\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {pressure} <br/>\r\n                                Pressure \r\n                            </p>\r\n                        </div>\r\n\r\n                        \r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-humidity\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {speed} <br/>\r\n                                Speed \r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n    \r\n                </div>\r\n            </article>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default WeatherCard\r\n","import React,{useState,useEffect} from 'react';\r\nimport './style.css';\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst Temp = () => {\r\n    const [searchValue, setSearchValue] = useState(\"korba\");\r\n    const[tempInfo, setTempInfo] = useState({});\r\n    \r\n    const getWeatherInfo = async ()=>{\r\n        try{\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=f50888ba966f0b93d0e732ece6f5bbb0`\r\n            let res = await fetch(url);\r\n            let data = await res.json();\r\n            console.log(data);\r\n\r\n            const {temp , pressure, humidity} = data.main;\r\n            const{main : weatherMood} = data.weather[0];\r\n            const{name} = data;\r\n            const{country, sunset } = data.sys;\r\n            const{speed} = data.wind;\r\n            // console.log(weatherMood)\r\n\r\n            const weatherCompleteInfo = {\r\n                temp , \r\n                pressure, \r\n                humidity,\r\n                weatherMood,\r\n                country, \r\n                sunset,\r\n                speed,\r\n                name\r\n            };\r\n            setTempInfo(weatherCompleteInfo);\r\n            console.log(weatherCompleteInfo);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    };\r\n   \r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input type=\"search\" placeholder=\"search....\" id=\"search\" className=\"searchTerm\" value={searchValue} onChange={(event)=>{setSearchValue(event.target.value)}}/>\r\n                    <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>Search</button>\r\n                </div>\r\n            </div>\r\n\r\n            <WeatherCard weatherInfo={tempInfo}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Temp\r\n","import React from 'react'\n// import Restaurant from './components/basics/Restaurant';\n// import UseState from './components/Hooks/UseState';\n// import UseEffect from './components/Hooks/useEffect';\n// import UseReducer from './components/Hooks/UseReducer';\n// import Todo from './components/todoreact/Todo';\nimport Temp from './components/Weather/Temp';\n\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Temp/>\n    \n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}